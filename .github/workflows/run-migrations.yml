name: Run Database Migrations

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'backend/migrations/**'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev

jobs:
  deploy-migrations:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: 'backend'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DSFSI_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Build and push image (using latest tag)
        run: |
          cd backend/alembic-service
          # Build with ONLY latest tag (matches your local command)
          docker build -t $GAR_LOCATION/$GCP_PROJECT_ID/mavito-images/alembic-service:latest .
          docker push $GAR_LOCATION/$GCP_PROJECT_ID/mavito-images/alembic-service:latest

      - name: Deploy and run migrations
        run: |
          # Use latest tag explicitly in deployment
          gcloud run jobs deploy alembic-migrations \
            --image=$GAR_LOCATION/$GCP_PROJECT_ID/mavito-images/alembic-service:latest \
            --set-env-vars="DB_URL=postgresql+asyncpg://${{ secrets.DB_USER }}:$(python3 -c "import urllib.parse; print(urllib.parse.quote('${{ secrets.DB_PASSWORD }}'))"@/${{ secrets.DB_NAME }}?host=/cloudsql/${{ secrets.INSTANCE_CONNECTION_NAME }}" \
            --set-cloudsql-instances=${{ secrets.INSTANCE_CONNECTION_NAME }} \
            --region=$GCP_REGION \
            --project=$GCP_PROJECT_ID \
            --command="/bin/sh,-c,alembic upgrade head" \
            --quiet

          gcloud run jobs execute alembic-migrations \
            --region=$GCP_REGION \
            --project=$GCP_PROJECT_ID \
            --wait
