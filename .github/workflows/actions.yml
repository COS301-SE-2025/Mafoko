name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  # Backend Pipeline
  backend:
    name: Backend Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    # This services block starts a PostgreSQL container for the job
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # Health check to ensure the database is ready before tests run
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy
          pip install -e ./mavito-common-lib
          pip install -r ./auth-service/requirements.txt
          pip install -r ./search-service/requirements.txt
          pip install -r ./analytics-service/requirements.txt
          pip install types-passlib
          pip install spacy
          pip install pytest-asyncio
          python3 -m pip install pandas-stubs
          pip install pandas
          python -m spacy download en_core_web_sm
          pip install httpx

      - name: Lint with Ruff
        run: ruff check .

      - name: Type check with mypy
        run: |
          echo "Running mypy on auth-service..."
          PYTHONPATH=. mypy auth-service/app
          echo "Running mypy on search-service..."
          PYTHONPATH=. mypy search-service/app
          echo "Running mypy on analytics-service..."
          PYTHONPATH=. mypy analytics-service/app

      - name: Format check with Black
        run: black --check .

      - name: Run tests for all services
        env:
          SECRET_KEY: "a-secret-key-for-testing"
          DB_USER: "testuser"
          DB_PASSWORD: "testpassword"
          DB_NAME: "testdb"
          DB_HOST: "localhost" # The service is mapped to localhost
          DB_PORT: "5432"      # The service port is mapped to the host port
        run: |
          echo "--- Running tests for Auth Service ---"
          (cd auth-service && PYTHONPATH=. pytest)
          echo "--- Running tests for Search Service ---"
          (cd search-service && PYTHONPATH=. pytest)
          echo "--- Running tests for Analytics Service ---"
          (cd analytics-service && PYTHONPATH=. pytest)

  # Frontend Pipeline
  frontend:
    name: Frontend Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint + Prettier checks
        run: |
          npx eslint . --ext .ts,.tsx
          npx prettier --check .

