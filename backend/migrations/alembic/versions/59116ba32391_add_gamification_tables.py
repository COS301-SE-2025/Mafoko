"""add gamification tables

Revision ID: 59116ba32391
Revises: bd4e1862768f
Create Date: 2025-09-21 02:25:30.191806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '59116ba32391'
down_revision: Union[str, Sequence[str], None] = 'bd4e1862768f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('achievement_type', sa.Enum('XP_MILESTONE', 'LEVEL_MILESTONE', 'COMMENT_COUNT', 'UPVOTE_COUNT', 'TERM_COUNT', 'LOGIN_STREAK', 'FEEDBACK_COUNT', name='achievementtype'), nullable=False),
    sa.Column('target_value', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_achievements_achievement_type'), 'achievements', ['achievement_type'], unique=False)
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.create_table('userachievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userachievements_achievement_id'), 'userachievements', ['achievement_id'], unique=False)
    op.create_index(op.f('ix_userachievements_earned_at'), 'userachievements', ['earned_at'], unique=False)
    op.create_index(op.f('ix_userachievements_id'), 'userachievements', ['id'], unique=False)
    op.create_index(op.f('ix_userachievements_user_id'), 'userachievements', ['user_id'], unique=False)
    op.create_table('userlevels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userlevels_id'), 'userlevels', ['id'], unique=False)
    op.create_index(op.f('ix_userlevels_user_id'), 'userlevels', ['user_id'], unique=True)
    op.create_table('userxps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('xp_amount', sa.Integer(), nullable=False),
    sa.Column('xp_source', sa.Enum('COMMENT', 'UPVOTE_RECEIVED', 'DOWNVOTE_RECEIVED', 'TERM_ADDITION', 'TERM_UPVOTE', 'FEEDBACK_SUBMISSION', 'GOAL_COMPLETION', 'LOGIN_STREAK', 'ACHIEVEMENT_BONUS', 'MANUAL_ADMIN', name='xpsource'), nullable=False),
    sa.Column('source_reference_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userxps_created_at'), 'userxps', ['created_at'], unique=False)
    op.create_index(op.f('ix_userxps_id'), 'userxps', ['id'], unique=False)
    op.create_index(op.f('ix_userxps_source_reference_id'), 'userxps', ['source_reference_id'], unique=False)
    op.create_index(op.f('ix_userxps_user_id'), 'userxps', ['user_id'], unique=False)
    op.create_index(op.f('ix_userxps_xp_source'), 'userxps', ['xp_source'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userxps_xp_source'), table_name='userxps')
    op.drop_index(op.f('ix_userxps_user_id'), table_name='userxps')
    op.drop_index(op.f('ix_userxps_source_reference_id'), table_name='userxps')
    op.drop_index(op.f('ix_userxps_id'), table_name='userxps')
    op.drop_index(op.f('ix_userxps_created_at'), table_name='userxps')
    op.drop_table('userxps')
    op.drop_index(op.f('ix_userlevels_user_id'), table_name='userlevels')
    op.drop_index(op.f('ix_userlevels_id'), table_name='userlevels')
    op.drop_table('userlevels')
    op.drop_index(op.f('ix_userachievements_user_id'), table_name='userachievements')
    op.drop_index(op.f('ix_userachievements_id'), table_name='userachievements')
    op.drop_index(op.f('ix_userachievements_earned_at'), table_name='userachievements')
    op.drop_index(op.f('ix_userachievements_achievement_id'), table_name='userachievements')
    op.drop_table('userachievements')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_achievement_type'), table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
