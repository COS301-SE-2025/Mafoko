"""Initial database schema

Revision ID: c4fed89bf6d6
Revises: 79b88ba65186
Create Date: 2025-08-05 12:53:29.731186

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c4fed89bf6d6"
down_revision: Union[str, Sequence[str], None] = "79b88ba65186"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "glossary_bookmarks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("domain", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("term_count", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_glossary_bookmarks_domain"),
        "glossary_bookmarks",
        ["domain"],
        unique=False,
    )
    op.create_index(
        op.f("ix_glossary_bookmarks_user_id"),
        "glossary_bookmarks",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "term_bookmarks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("term_id", sa.UUID(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["terms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_term_bookmarks_term_id"), "term_bookmarks", ["term_id"], unique=False
    )
    op.create_index(
        op.f("ix_term_bookmarks_user_id"), "term_bookmarks", ["user_id"], unique=False
    )
    op.create_table(
        "workspace_groups",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_workspace_groups_user_id"),
        "workspace_groups",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "workspace_notes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("term_id", sa.UUID(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["terms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_workspace_notes_term_id"), "workspace_notes", ["term_id"], unique=False
    )
    op.create_index(
        op.f("ix_workspace_notes_user_id"), "workspace_notes", ["user_id"], unique=False
    )
    op.create_table(
        "group_terms",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.Column("term_id", sa.UUID(), nullable=False),
        sa.Column(
            "added_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["workspace_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["terms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_group_terms_group_id"), "group_terms", ["group_id"], unique=False
    )
    op.create_index(
        op.f("ix_group_terms_term_id"), "group_terms", ["term_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_group_terms_term_id"), table_name="group_terms")
    op.drop_index(op.f("ix_group_terms_group_id"), table_name="group_terms")
    op.drop_table("group_terms")
    op.drop_index(op.f("ix_workspace_notes_user_id"), table_name="workspace_notes")
    op.drop_index(op.f("ix_workspace_notes_term_id"), table_name="workspace_notes")
    op.drop_table("workspace_notes")
    op.drop_index(op.f("ix_workspace_groups_user_id"), table_name="workspace_groups")
    op.drop_table("workspace_groups")
    op.drop_index(op.f("ix_term_bookmarks_user_id"), table_name="term_bookmarks")
    op.drop_index(op.f("ix_term_bookmarks_term_id"), table_name="term_bookmarks")
    op.drop_table("term_bookmarks")
    op.drop_index(
        op.f("ix_glossary_bookmarks_user_id"), table_name="glossary_bookmarks"
    )
    op.drop_index(op.f("ix_glossary_bookmarks_domain"), table_name="glossary_bookmarks")
    op.drop_table("glossary_bookmarks")
    # ### end Alembic commands ###
