"""Initial database schema with workspace tables

Revision ID: 75b76e821863
Revises: 
Create Date: 2025-07-31 17:18:43.807611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '75b76e821863'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('terms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('term', sa.String(length=255), nullable=False),
    sa.Column('definition', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=50), nullable=False),
    sa.Column('domain', sa.String(length=100), nullable=False),
    sa.Column('example', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_terms_domain'), 'terms', ['domain'], unique=False)
    op.create_index(op.f('ix_terms_language'), 'terms', ['language'], unique=False)
    op.create_index(op.f('ix_terms_term'), 'terms', ['term'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('linguist', 'contributor', 'admin', name='user_role_enum_type_sqla'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('account_locked', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_password_reset_token'), 'users', ['password_reset_token'], unique=False)
    op.create_index(op.f('ix_users_verification_token'), 'users', ['verification_token'], unique=False)
    op.create_table('bookmarked_glossaries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('bookmarked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookmarked_terms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('term_id', sa.UUID(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('bookmarked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('linguistapplications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='application_status_enum'), nullable=False),
    sa.Column('id_document_url', sa.String(), nullable=False),
    sa.Column('cv_document_url', sa.String(), nullable=False),
    sa.Column('certifications_document_url', sa.String(), nullable=True),
    sa.Column('research_papers_document_url', sa.String(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('term_translations',
    sa.Column('term_id', sa.UUID(), nullable=False),
    sa.Column('translation_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.ForeignKeyConstraint(['translation_id'], ['terms.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'translation_id')
    )
    op.create_table('termvotes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('term_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('vote', sa.Enum('upvote', 'downvote', name='vote_type_enum'), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_termvotes_term_id'), 'termvotes', ['term_id'], unique=False)
    op.create_index(op.f('ix_termvotes_user_id'), 'termvotes', ['user_id'], unique=False)
    op.create_table('workspace_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('group_type', sa.Enum('TERMS', 'GLOSSARIES', 'MIXED', name='grouptype'), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workspace_group_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.Column('item_type', sa.Enum('TERM', 'GLOSSARY', name='itemtype'), nullable=False),
    sa.Column('term_id', sa.UUID(), nullable=True),
    sa.Column('domain', sa.String(length=100), nullable=True),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['workspace_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workspace_group_items')
    op.drop_table('workspace_groups')
    op.drop_index(op.f('ix_termvotes_user_id'), table_name='termvotes')
    op.drop_index(op.f('ix_termvotes_term_id'), table_name='termvotes')
    op.drop_table('termvotes')
    op.drop_table('term_translations')
    op.drop_table('linguistapplications')
    op.drop_table('bookmarked_terms')
    op.drop_table('bookmarked_glossaries')
    op.drop_index(op.f('ix_users_verification_token'), table_name='users')
    op.drop_index(op.f('ix_users_password_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_terms_term'), table_name='terms')
    op.drop_index(op.f('ix_terms_language'), table_name='terms')
    op.drop_index(op.f('ix_terms_domain'), table_name='terms')
    op.drop_table('terms')
    # ### end Alembic commands ###
