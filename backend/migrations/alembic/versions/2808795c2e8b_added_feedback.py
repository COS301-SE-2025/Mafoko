"""Added Feedback

Revision ID: 2808795c2e8b
Revises: 56b5324f51ae
Create Date: 2025-08-20 06:17:48.716459

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2808795c2e8b"
down_revision: Union[str, Sequence[str], None] = "56b5324f51ae"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "feedbacks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("suggestion", "complaint", "compliment", name="feedback_type_enum"),
            nullable=False,
        ),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "open", "in_progress", "resolved", "closed", name="feedback_status_enum"
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("admin_response", sa.Text(), nullable=True),
        sa.Column("resolved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("resolved_by_user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["resolved_by_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_feedbacks_id"), "feedbacks", ["id"], unique=False)
    op.create_index(
        op.f("ix_feedbacks_resolved_by_user_id"),
        "feedbacks",
        ["resolved_by_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_feedbacks_user_id"), "feedbacks", ["user_id"], unique=False
    )
    op.drop_constraint(
        op.f("termapplications_term_id_fkey"), "termapplications", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "termapplications", "terms", ["term_id"], ["id"], ondelete="SET NULL"
    )
    op.drop_index(op.f("ix_users_password_reset_token"), table_name="users")
    op.drop_index(op.f("ix_users_verification_token"), table_name="users")
    op.drop_column("users", "verification_token")
    op.drop_column("users", "password_reset_token")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password_reset_token",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "verification_token",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_index(
        op.f("ix_users_verification_token"),
        "users",
        ["verification_token"],
        unique=False,
    )
    op.create_index(
        op.f("ix_users_password_reset_token"),
        "users",
        ["password_reset_token"],
        unique=False,
    )
    op.drop_constraint(None, "termapplications", type_="foreignkey")
    op.create_foreign_key(
        op.f("termapplications_term_id_fkey"),
        "termapplications",
        "terms",
        ["term_id"],
        ["id"],
    )
    op.drop_index(op.f("ix_feedbacks_user_id"), table_name="feedbacks")
    op.drop_index(op.f("ix_feedbacks_resolved_by_user_id"), table_name="feedbacks")
    op.drop_index(op.f("ix_feedbacks_id"), table_name="feedbacks")
    op.drop_table("feedbacks")
    # ### end Alembic commands ###
